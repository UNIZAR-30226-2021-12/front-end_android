Index: app/src/main/java/eina/unizar/unozar/API.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package eina.unizar.unozar\r\n\r\nimport retrofit2.Call\r\nimport retrofit2.http.*\r\nimport server.request.*\r\nimport server.response.*\r\n\r\ninterface API {\r\n    /*** PLAYER REQUESTS ***/\r\n    @POST(\"/player/authentication\")\r\n    fun authentication(\r\n        @Body login: LoginUser\r\n    ): Call<TokenResponse>\r\n\r\n    @POST(\"/player/create\")\r\n    fun register(\r\n        @Body register: RegisterUser\r\n    ): Call<PlayerInfo>\r\n\r\n    @POST(\"/player/read\")\r\n    fun readPlayer(\r\n        @Body idRequest: IdRequest\r\n    ): Call<PlayerInfo>\r\n\r\n    @PATCH(\"/player/update\")\r\n    fun updatePlayer(\r\n        @Body updateRequest: UpdateRequest\r\n    ): Call<TokenResponse>\r\n\r\n    @HTTP(method = \"DELETE\", path = \"/player/delete\", hasBody = true)\r\n    fun deleteAccount(\r\n        @Body delete: TokenRequest\r\n    ): Call<Void>\r\n\r\n    @POST(\"/player/refreshToken\")\r\n    fun refreshToken(\r\n        @Body refreshRequest: TokenRequest\r\n    ): Call<TokenResponse>\r\n\r\n    @POST(\"/player/addFriend\")\r\n    fun addFriend(\r\n        @Body addFriendRequest: AddFriendRequest\r\n    ): Call<TokenResponse>\r\n\r\n    @POST(\"/player/deleteFriend\")\r\n    fun deleteFriend(\r\n        @Body addFriendRequest: AddFriendRequest\r\n    ): Call<TokenResponse>\r\n\r\n    @POST(\"/player/readFriends\")\r\n    fun getFriends(\r\n        @Body tokenRequest: TokenRequest\r\n    ): Call<FriendsListResponse>\r\n\r\n    /*** GAME REQUESTS ***/\r\n    @POST(\"/game/create\")\r\n    fun createMatch(\r\n        @Body createMatchRequest: CreateMatchRequest\r\n    ): Call<TokenResponse>\r\n\r\n    @POST(\"/game/join\")\r\n    fun joinPrivate(\r\n        @Body joinPrivateRequest: JoinPrivateRequest\r\n    ): Call<TokenResponse>\r\n\r\n    @POST(\"/game/quit\")\r\n    fun quitMatch(\r\n        @Body delete: TokenRequest\r\n    ): Call<TokenResponse>\r\n\r\n    @POST(\"/game/readRoom\")\r\n    fun readRoom(\r\n        @Body delete: TokenRequest\r\n    ): Call<RoomInfoResponse>\r\n\r\n    @POST(\"/game/readGame\")\r\n    fun readGame(\r\n        @Body delete: TokenRequest\r\n    ): Call<GameInfoResponse>\r\n\r\n    @POST(\"/game/start\")\r\n    fun startMatch(\r\n        @Body tokenRequest: TokenRequest\r\n    ): Call<TokenResponse>\r\n\r\n    @POST(\"/game/playCard\")\r\n    fun playCard(\r\n        @Body playCardRequest: PlayCardRequest\r\n    ): Call<TokenResponse>\r\n\r\n    @POST(\"/game/draw\")\r\n    fun draw(\r\n        @Body tokenRequest: TokenRequest\r\n    ): Call<TokenResponse>\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/eina/unizar/unozar/API.kt	(revision 2cc819c2bd3f6408528454fc98ee650684b61697)
+++ app/src/main/java/eina/unizar/unozar/API.kt	(date 1620857731500)
@@ -92,4 +92,9 @@
     fun draw(
         @Body tokenRequest: TokenRequest
     ): Call<TokenResponse>
+
+    @POST("/game/pause")
+    fun pause(
+        @Body tokenRequest: TokenRequest
+    ): Call<TokenResponse>
 }
Index: app/src/main/res/layout/activity_principal.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".Principal\">\r\n\r\n    <androidx.appcompat.widget.Toolbar\r\n        android:id=\"@+id/toolbar\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"?attr/actionBarSize\"\r\n        android:background=\"#2196F3\"\r\n        android:theme=\"@style/ToolbarTheme\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.5\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/button\"\r\n        android:layout_width=\"200dp\"\r\n        android:layout_height=\"100dp\"\r\n        android:onClick=\"publicMatch\"\r\n        android:text=\"@string/public_game\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/button4\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.5\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/toolbar\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/button4\"\r\n        android:layout_width=\"200dp\"\r\n        android:layout_height=\"100dp\"\r\n        android:onClick=\"privateMatch\"\r\n        android:text=\"@string/private_game\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.5\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/button\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView7\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:background=\"@drawable/cash_border\"\r\n        android:text=\"@string/cash\"\r\n        android:textSize=\"18sp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.498\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"0.118\" />\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_principal.xml	(revision 2cc819c2bd3f6408528454fc98ee650684b61697)
+++ app/src/main/res/layout/activity_principal.xml	(date 1620858716438)
@@ -42,7 +42,7 @@
         app:layout_constraintTop_toBottomOf="@+id/button" />
 
     <TextView
-        android:id="@+id/textView7"
+        android:id="@+id/money"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:background="@drawable/cash_border"
Index: app/src/main/java/eina/unizar/unozar/TableroActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package eina.unizar.unozar\r\n\r\nimport adapter.CardAdapter\r\nimport adapter.GamerAdapter\r\nimport android.app.Activity\r\nimport android.content.DialogInterface\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.os.CountDownTimer\r\nimport android.view.Menu\r\nimport android.view.MenuItem\r\nimport android.widget.Toast\r\nimport androidx.appcompat.app.AlertDialog\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport data.Card\r\nimport data.Gamer\r\nimport kotlinx.android.synthetic.main.activity_tablero.*\r\nimport kotlinx.coroutines.CoroutineScope\r\nimport kotlinx.coroutines.Dispatchers\r\nimport kotlinx.coroutines.delay\r\nimport kotlinx.coroutines.launch\r\nimport retrofit2.Call\r\nimport retrofit2.Callback\r\nimport retrofit2.Response\r\nimport server.request.PlayCardRequest\r\nimport server.request.TokenRequest\r\nimport server.response.GameInfoResponse\r\nimport server.response.TokenResponse\r\n//import kotlin.properties.Delegates\r\n\r\nvar posCambiado :Long = 0\r\nvar recordCambiado = false\r\nvar nombreRecordado = \"\"\r\nvar record = 0\r\n\r\nclass TableroActivity : AppCompatActivity() {\r\n\r\n    private lateinit var timer : CountDownTimer\r\n    internal val initial: Long = 60000\r\n    internal val interval: Long = 1000\r\n    private lateinit var session: String\r\n    private var turn: Int = 5\r\n    private var finished = false\r\n\r\n    private fun traductorCartasToInt(carta: String): Int {\r\n        if(carta[1] == 'R') {\r\n            if(carta[2] == 'X') {\r\n                if(carta[0] == '0') { return R.drawable.cero_rojo }\r\n                if(carta[0] == '1') { return R.drawable.uno_rojo }\r\n                if(carta[0] == '2') { return R.drawable.dos_rojo }\r\n                if(carta[0] == '3') { return R.drawable.tres_rojo }\r\n                if(carta[0] == '4') { return R.drawable.cuatro_rojo }\r\n                if(carta[0] == '5') { return R.drawable.cinco_rojo }\r\n                if(carta[0] == '6') { return R.drawable.seis_rojo }\r\n                if(carta[0] == '7') { return R.drawable.siete_rojo }\r\n                if(carta[0] == '8') { return R.drawable.ocho_rojo }\r\n                if(carta[0] == '9') { return R.drawable.nueve_rojo }\r\n            }\r\n            else if(carta[2] == 'S') { return R.drawable.saltar_turno_rojo }\r\n            else if(carta[2] == '2') { return R.drawable.mas_dos_rojo }\r\n            else if(carta[2] == 'C') { return R.drawable.cambio_color_rojo }\r\n            else if(carta[2] == '4') { return R.drawable.mas_cuatro_rojo }\r\n            //else { return 0 }\r\n        }\r\n        else if(carta[1] == 'Y') {\r\n            if(carta[2] == 'X') {\r\n                if(carta[0] == '0') { return R.drawable.cero_amarillo }\r\n                if(carta[0] == '1') { return R.drawable.uno_amarillo }\r\n                if(carta[0] == '2') { return R.drawable.dos_amarillo }\r\n                if(carta[0] == '3') { return R.drawable.tres_amarillo }\r\n                if(carta[0] == '4') { return R.drawable.cuatro_amarillo }\r\n                if(carta[0] == '5') { return R.drawable.cinco_amarillo }\r\n                if(carta[0] == '6') { return R.drawable.seis_amarillo }\r\n                if(carta[0] == '7') { return R.drawable.siete_amarillo }\r\n                if(carta[0] == '8') { return R.drawable.ocho_amarillo }\r\n                if(carta[0] == '9') { return R.drawable.nueve_amarillo }\r\n            }\r\n            else if(carta[2] == 'S') { return R.drawable.saltar_turno_amarillo }\r\n            else if(carta[2] == '2') { return R.drawable.mas_dos_amarillo }\r\n            else if(carta[2] == 'C') { return R.drawable.cambio_color_amarillo }\r\n            else if(carta[2] == '4') { return R.drawable.mas_cuatro_amarillo }\r\n            //else{return 0}\r\n        }\r\n        else if(carta[1] == 'B') {\r\n            if(carta[2] == 'X') {\r\n                if(carta[0] == '0') { return R.drawable.cero_azul }\r\n                if(carta[0] == '1') { return R.drawable.uno_azul }\r\n                if(carta[0] == '2') { return R.drawable.dos_azul }\r\n                if(carta[0] == '3') { return R.drawable.tres_azul }\r\n                if(carta[0] == '4') { return R.drawable.cuatro_azul }\r\n                if(carta[0] == '5') { return R.drawable.cinco_azul }\r\n                if(carta[0] == '6') { return R.drawable.seis_azul }\r\n                if(carta[0] == '7') { return R.drawable.siete_azul }\r\n                if(carta[0] == '8') { return R.drawable.ocho_azul }\r\n                if(carta[0] == '9') { return R.drawable.nueve_azul }\r\n            }\r\n            else if(carta[2] == 'S') {return R.drawable.saltar_turno_azul }\r\n            else if(carta[2] == '2') {return R.drawable.mas_dos_azul }\r\n            else if(carta[2] == 'C') {return R.drawable.cambio_color_azul }\r\n            else if(carta[2] == '4') {return R.drawable.mas_cuatro_azul }\r\n            //else { return 0 }\r\n        }\r\n        else if(carta[1] == 'G') {\r\n            if(carta[2] == 'X') {\r\n                if(carta[0] == '0') { return R.drawable.cero_verde }\r\n                if(carta[0] == '1') { return R.drawable.uno_verde }\r\n                if(carta[0] == '2') { return R.drawable.dos_verde }\r\n                if(carta[0] == '3') { return R.drawable.tres_verde }\r\n                if(carta[0] == '4') { return R.drawable.cuatro_verde }\r\n                if(carta[0] == '5') { return R.drawable.cinco_verde }\r\n                if(carta[0] == '6') { return R.drawable.seis_verde }\r\n                if(carta[0] == '7') { return R.drawable.siete_verde }\r\n                if(carta[0] == '8') { return R.drawable.ocho_verde }\r\n                if(carta[0] == '9') { return R.drawable.nueve_verde }\r\n            }\r\n            else if(carta[2] == 'S') { return R.drawable.saltar_turno_verde }\r\n            else if(carta[2] == '2') { return R.drawable.mas_dos_verde }\r\n            else if(carta[2] == 'C') { return R.drawable.cambio_color_verde }\r\n            else if(carta[2] == '4') { return R.drawable.mas_cuatro_verde }\r\n            //else { return 0 }\r\n        }\r\n        else if((carta[0] == 'X') && (carta[1] == 'X')) {\r\n            if(carta[2] == 'C') { return R.drawable.cambio_color_base }\r\n            else if(carta[2] == '4') { return R.drawable.mas_cuatro_base }\r\n            //else { return 0 }\r\n        }\r\n        val choose = AlertDialog.Builder(this)\r\n        choose.setTitle(carta)\r\n        choose.setPositiveButton(getString(R.string.create_button)) { _: DialogInterface, _: Int -> }\r\n        choose.show()\r\n        return 0\r\n    }\r\n\r\n    /*fun traductorCartasToString(carta: Int): String {\r\n        if(carta == R.drawable.cero_rojo) {return \"0RX\"}\r\n        if(carta == R.drawable.uno_rojo) {return \"1RX\"}\r\n        if(carta == R.drawable.dos_rojo) {return \"2RX\"}\r\n        if(carta == R.drawable.tres_rojo) {return \"3RX\"}\r\n        if(carta == R.drawable.cuatro_rojo) {return \"4RX\"}\r\n        if(carta == R.drawable.cinco_rojo) {return \"5RX\"}\r\n        if(carta == R.drawable.seis_rojo) {return \"6RX\"}\r\n        if(carta == R.drawable.siete_rojo) {return \"7RX\"}\r\n        if(carta == R.drawable.ocho_rojo) {return \"8RX\"}\r\n        if(carta == R.drawable.nueve_rojo) {return \"9RX\"}\r\n        if(carta == R.drawable.saltar_turno_rojo) {return \"XRS\"}\r\n        if(carta == R.drawable.mas_dos_rojo) {return \"XR2\"}\r\n        if(carta == R.drawable.cambio_color_rojo) {return \"XRR\"}\r\n        if(carta == R.drawable.mas_cuatro_rojo) {return \"XR4\"}\r\n\r\n        if(carta == R.drawable.cero_amarillo) {return \"0AX\"}\r\n        if(carta == R.drawable.uno_amarillo) {return \"1AX\"}\r\n        if(carta == R.drawable.dos_amarillo) {return \"2AX\"}\r\n        if(carta == R.drawable.tres_amarillo) {return \"3AX\"}\r\n        if(carta == R.drawable.cuatro_amarillo) {return \"4AX\"}\r\n        if(carta == R.drawable.cinco_amarillo) {return \"5AX\"}\r\n        if(carta == R.drawable.seis_amarillo) {return \"6AX\"}\r\n        if(carta == R.drawable.siete_amarillo) {return \"7AX\"}\r\n        if(carta == R.drawable.ocho_amarillo) {return \"8AX\"}\r\n        if(carta == R.drawable.nueve_amarillo) {return \"9AX\"}\r\n        if(carta == R.drawable.saltar_turno_amarillo) {return \"XAS\"}\r\n        if(carta == R.drawable.mas_dos_amarillo) {return \"XA2\"}\r\n        if(carta == R.drawable.cambio_color_amarillo) {return \"XAR\"}\r\n        if(carta == R.drawable.mas_cuatro_amarillo) {return \"XA4\"}\r\n\r\n        if(carta == R.drawable.cero_azul) {return \"0BX\"}\r\n        if(carta == R.drawable.uno_azul) {return \"1BX\"}\r\n        if(carta == R.drawable.dos_azul) {return \"2BX\"}\r\n        if(carta == R.drawable.tres_azul) {return \"3BX\"}\r\n        if(carta == R.drawable.cuatro_azul) {return \"4BX\"}\r\n        if(carta == R.drawable.cinco_azul) {return \"5BX\"}\r\n        if(carta == R.drawable.seis_azul) {return \"6BX\"}\r\n        if(carta == R.drawable.siete_azul) {return \"7BX\"}\r\n        if(carta == R.drawable.ocho_azul) {return \"8BX\"}\r\n        if(carta == R.drawable.nueve_azul) {return \"9BX\"}\r\n        if(carta == R.drawable.saltar_turno_azul) {return \"XBS\"}\r\n        if(carta == R.drawable.mas_dos_azul) {return \"XB2\"}\r\n        if(carta == R.drawable.cambio_color_azul) {return \"XBR\"}\r\n        if(carta == R.drawable.mas_cuatro_azul) {return \"XB4\"}\r\n\r\n        if(carta == R.drawable.cero_verde) {return \"0GX\"}\r\n        if(carta == R.drawable.uno_verde) {return \"1GX\"}\r\n        if(carta == R.drawable.dos_verde) {return \"2GX\"}\r\n        if(carta == R.drawable.tres_verde) {return \"3GX\"}\r\n        if(carta == R.drawable.cuatro_verde) {return \"4GX\"}\r\n        if(carta == R.drawable.cinco_verde) {return \"5GX\"}\r\n        if(carta == R.drawable.seis_verde) {return \"6GX\"}\r\n        if(carta == R.drawable.siete_verde) {return \"7GX\"}\r\n        if(carta == R.drawable.ocho_verde) {return \"8GX\"}\r\n        if(carta == R.drawable.nueve_verde) {return \"9GX\"}\r\n        if(carta == R.drawable.saltar_turno_verde) {return \"XGS\"}\r\n        if(carta == R.drawable.mas_dos_verde) {return \"XG2\"}\r\n        if(carta == R.drawable.cambio_color_verde) {return \"XGR\"}\r\n        if(carta == R.drawable.mas_cuatro_verde) {return \"XG4\"}\r\n\r\n        if(carta == R.drawable.cambio_color_base) {return \"XXR\"}\r\n        if(carta == R.drawable.mas_cuatro_base) {return \"XX4\"}\r\n        return \"\"\r\n    }*/\r\n\r\n    val Cards = mutableListOf<Card>()\r\n    val Gamers = mutableListOf<Gamer>()\r\n\r\n    var cimaActual = \"\"\r\n    var cimaCambiada = false\r\n    var cimaNueva = \"\"\r\n\r\n    var CartaNueva = \"\"\r\n    var robadaCarta = false\r\n    var cartaAnadida = false\r\n\r\n    var miTurno = true\r\n\r\n    /*val PruebaCartas = arrayOf(\"XXC\",\"2RX\",\"XRS\",\"XX4\",\"0GX\",\"8YX\",\"XB2\",\"4BX\")\r\n    val PruebaJugadores = arrayOf(\"Jugador1\",\"Jugador2\",\"Jugador3\",\"Jugador4\")\r\n    val PruebaNCartas = arrayOf(4,5,6,7)\r\n    val cimaPrueba = \"0GX\"*/\r\n\r\n    fun comprobarCima() {\r\n        if(cimaActual.isEmpty()) {\r\n            cimaCambiada = true\r\n        }\r\n        else{\r\n            if (cimaActual != cimaNueva) {\r\n                cimaCambiada = true\r\n                cimaActual = cimaNueva\r\n            }\r\n        }\r\n    }\r\n\r\n    fun cambiarCima() {\r\n        cimaActual = cimaNueva\r\n        //val imageView1 = findViewById<ImageView>(R.id.image_cima)\r\n        image_cima.setImageResource(traductorCartasToInt(cimaActual))\r\n    }\r\n\r\n    val manoActual = mutableListOf<String>()\r\n    private var manoCambiada = false\r\n    private lateinit var manoNueva : Array<String>\r\n\r\n    fun comprobarManoNueva() {\r\n        if(manoActual.size == 0 && (manoNueva.isNotEmpty())) { manoCambiada = true }\r\n        else{\r\n            if((manoActual.size < manoNueva.size) || (manoActual.size > manoNueva.size)) {\r\n                manoCambiada = true\r\n            }\r\n            else { //La manoActual y la nueva tienen el mismo tamaño\r\n                var i = 0\r\n                while ((i < manoActual.size) && !manoCambiada) {\r\n                    if ((manoActual[i]) != manoNueva[i]) { manoCambiada = true }\r\n                    i++\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    fun cambiarMano() {\r\n        manoActual.removeAll(manoActual)\r\n        val tamano = manoNueva.size -1\r\n        for(i in 0..tamano) { manoActual.add(manoNueva[i]) }\r\n    }\r\n\r\n    private val jugadoresActuales = mutableListOf<String>()\r\n    var jugadoresCambiados = false\r\n    lateinit var jugadoresNuevos : Array<String>\r\n\r\n    fun comprobarNombresJugadoresNuevos() {\r\n        if(jugadoresActuales.size == 0) {\r\n            jugadoresCambiados = true\r\n        }\r\n        else {\r\n            var i = 0\r\n            while ((i < jugadoresActuales.size) && !jugadoresCambiados) {\r\n                if ((jugadoresActuales[i]) != jugadoresNuevos[i]) {\r\n                    jugadoresCambiados = true\r\n                }\r\n                i++\r\n            }\r\n        }\r\n    }\r\n\r\n    fun cambiarJugadoresYCartas() {\r\n        jugadoresActuales.removeAll(jugadoresActuales)\r\n        var tamano = jugadoresNuevos.size -1\r\n        for(i in 0..tamano) {\r\n            jugadoresActuales.add(jugadoresNuevos[i])\r\n        }\r\n        numCartasJugadoresActuales.removeAll(numCartasJugadoresActuales)\r\n        tamano = numCartasJugadoresNuevos.size -1\r\n        for(i in 0..tamano) {\r\n            numCartasJugadoresActuales.add(numCartasJugadoresNuevos[i])\r\n        }\r\n    }\r\n\r\n    private val numCartasJugadoresActuales  = mutableListOf<Int>()\r\n    var numCartasJugadoresCambiados = false\r\n    lateinit var numCartasJugadoresNuevos : Array<Int>\r\n\r\n    fun comprobarCartasJugadores() {\r\n        if(numCartasJugadoresActuales.size == 0) {\r\n            numCartasJugadoresCambiados = true\r\n        }\r\n        else {\r\n            var i = 0\r\n            while ((i < numCartasJugadoresActuales.size) && !numCartasJugadoresCambiados) {\r\n                if (numCartasJugadoresActuales[i] != numCartasJugadoresNuevos[i]) {\r\n                    numCartasJugadoresCambiados = true\r\n                }\r\n                i++\r\n            }\r\n        }\r\n    }\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_tablero)\r\n        session = intent.getStringExtra(\"session\").toString()\r\n        /*manoNueva = PruebaCartas\r\n        jugadoresNuevos = PruebaJugadores\r\n        numCartasJugadoresNuevos = PruebaNCartas\r\n        cimaNueva = cimaPrueba*/\r\n\r\n        actualizar()\r\n\r\n        /* Tiempo de turno */\r\n        timer = object: CountDownTimer(initial, interval) {\r\n            override fun onTick(millisUntilFinished: Long) {\r\n                val timeLeft = millisUntilFinished / 1000\r\n                //timerText.text = getString(R.string.time_left, timeLeft.toString())\r\n            }\r\n            override fun onFinish() {\r\n                TODO(\"Not yet implemented\")\r\n            }\r\n        }\r\n        //val putButton = findViewById<View>(R.id.buttonPoner) as Button\r\n        //val pedirUnoButton = findViewById<View>(R.id.buttonPedirUno) as Button\r\n        //val robarButton = findViewById<View>(R.id.buttonRobarCarta) as Button\r\n        //val pasarButton = findViewById<View>(R.id.buttonPasar) as Button\r\n        buttonPoner.setOnClickListener {\r\n            if(miTurno && !cartaPuesta) ponerCarta()\r\n        }\r\n        buttonPedirUno.setOnClickListener{\r\n            if(miTurno) pedirUno()\r\n        }\r\n        buttonRobarCarta.setOnClickListener{\r\n            if(miTurno && !robadaCarta) robarCarta()\r\n        }\r\n        //buttonPasar.setOnClickListener{ if(miTurno) pasarTurno() }\r\n    }\r\n\r\n    private var haDichoUnozar = false\r\n    private fun pedirUno() {\r\n        haDichoUnozar = true\r\n    }\r\n\r\n    private fun robarCarta() {\r\n\r\n        //Pedir robar carta al servidor\r\n        runOnUiThread {\r\n            RetrofitClient.instance.draw(TokenRequest(session))\r\n                .enqueue(object : Callback<TokenResponse> {\r\n                    override fun onFailure(call: Call<TokenResponse>, t: Throwable) {\r\n                        Toast.makeText(\r\n                            applicationContext,\r\n                            getString(R.string.no_response),\r\n                            Toast.LENGTH_LONG\r\n                        ).show()\r\n                    }\r\n\r\n                    override fun onResponse(\r\n                        call: Call<TokenResponse>,\r\n                        response: Response<TokenResponse>\r\n                    ) {\r\n                        if (response.code() == 200) {\r\n                            //CartaNueva = response.body()!!.\r\n                            CartaNueva = \"XG2\"\r\n                            robadaCarta = true\r\n                            cartaAnadida = true\r\n                            session = response.body()?.token.toString()\r\n                        } else {\r\n                            Toast.makeText(applicationContext, response.code(), Toast.LENGTH_LONG).show()\r\n                        }\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    fun anadirCartaMano(nuevaCarta:String) {\r\n        manoActual.add(nuevaCarta)\r\n        manoNueva += nuevaCarta\r\n    }\r\n\r\n    /*private fun pasarTurno() {\r\n        robadaCarta = false\r\n        cartaPuesta = true\r\n        miTurno = false\r\n        //Pedir pasarTurno al servidor\r\n        /*RetrofitClient.instance.userPlayCard(PutCardRequest(/*Que tengo que enviar*/))\r\n            .enqueue(object : Callback<PutCardResponse> {\r\n                override fun onFailure(call: Call<RegisterResponse>, t: Throwable) {\r\n                    Toast.makeText(applicationContext, \"El servidor no responde\", Toast.LENGTH_LONG).show()\r\n                } override fun onResponse(call: Call<RegisterResponse>, response: Response<RegisterResponse>) {\r\n                    if (response.code() == 200) {\r\n                        //Se ha pasado el tuno con éxito\r\n                    } else {\r\n                        Toast.makeText(applicationContext, \"Quizás se haya caido el servidor\", Toast.LENGTH_LONG).show()\r\n                    }\r\n                }\r\n            })*/\r\n    }*/\r\n\r\n    private var cartaPuesta = false\r\n    fun quitarCarta() {\r\n        val auxMano = mutableListOf<String>()\r\n        val tamano = manoActual.size -1\r\n        val cartaExp = nombreRecordado\r\n        lateinit var cartaMia : String\r\n        for(i in 0..tamano) {\r\n            cartaMia = manoActual[i]\r\n            if(cartaMia != cartaExp) auxMano.add(manoActual[i])\r\n        }\r\n        manoNueva = auxMano.toTypedArray()\r\n    }\r\n\r\n    private lateinit var colorSelected: String\r\n    private fun ponerCarta() {\r\n        //Si es una +4 o un cambia color\r\n        if(nombreRecordado == \"XXC\" || nombreRecordado == \"XX4\") {\r\n            val builder = AlertDialog.Builder(this)\r\n            val items = arrayOf(\"Red\", \"Green\", \"Yellow\", \"Blue\")\r\n            with(builder)\r\n            {\r\n                setTitle(\"Elija un color\")\r\n                setItems(items) { _, which ->\r\n                    //Poner carta\r\n                    Toast.makeText(applicationContext, items[which] + \" is clicked\", Toast.LENGTH_SHORT).show()\r\n                    if(items[which].equals(\"Red\") && nombreRecordado == \"XXC\") {\r\n                        nombreRecordado = \"XRC\"\r\n                        colorSelected = \"R\"\r\n                    }\r\n                    else if(items[which].equals(\"Green\") && nombreRecordado == \"XXC\") {\r\n                        nombreRecordado = \"XGC\"\r\n                        colorSelected = \"G\"\r\n                    }\r\n                    else if(items[which].equals(\"Blue\") && nombreRecordado == \"XXC\") {\r\n                        nombreRecordado = \"XBC\"\r\n                        colorSelected = \"B\"\r\n                    }\r\n                    else if(items[which].equals(\"Yellow\") && nombreRecordado == \"XXC\") {\r\n                        nombreRecordado = \"XYC\"\r\n                        colorSelected = \"Y\"\r\n                    }\r\n                    else if(items[which].equals(\"Red\") && nombreRecordado == \"XX4\") {\r\n                        nombreRecordado = \"XR4\"\r\n                        colorSelected = \"R\"\r\n                    }\r\n                    else if(items[which].equals(\"Green\") && nombreRecordado == \"XX4\") {\r\n                        nombreRecordado = \"XG4\"\r\n                        colorSelected = \"G\"\r\n                    }\r\n                    else if(items[which].equals(\"Blue\") && nombreRecordado == \"XX4\") {\r\n                        nombreRecordado = \"XB4\"\r\n                        colorSelected = \"B\"\r\n                    }\r\n                    else if(items[which].equals(\"Yellow\") && nombreRecordado == \"XX4\") {\r\n                        nombreRecordado = \"XY4\"\r\n                        colorSelected = \"Y\"\r\n                    }\r\n                }\r\n                show()\r\n            }\r\n        }\r\n\r\n        //Mandar carta al servidor\r\n        /** Queda parámetro de posición de la carta en nuestro mazo**/\r\n        runOnUiThread {\r\n            RetrofitClient.instance.playCard(\r\n                PlayCardRequest(\r\n                    session,\r\n                    posCambiado.toInt(),\r\n                    haDichoUnozar,\r\n                    colorSelected\r\n                )\r\n            )\r\n                .enqueue(object : Callback<TokenResponse> {\r\n                    override fun onFailure(call: Call<TokenResponse>, t: Throwable) {\r\n                        Toast.makeText(\r\n                            applicationContext,\r\n                            \"El servidor no responde\",\r\n                            Toast.LENGTH_LONG\r\n                        ).show()\r\n                    }\r\n\r\n                    override fun onResponse(\r\n                        call: Call<TokenResponse>,\r\n                        response: Response<TokenResponse>\r\n                    ) {\r\n                        if (response.code() == 200) {\r\n                            //La carta se ha puesto con éxito\r\n                            quitarCarta()\r\n                            nombreRecordado = \"\"\r\n                            record = 0\r\n                            recordCambiado = true\r\n                        } else {\r\n                            Toast.makeText(\r\n                                applicationContext,\r\n                                \"Quizás se haya caido el servidor\",\r\n                                Toast.LENGTH_LONG\r\n                            ).show()\r\n                        }\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    private fun anyadirCartas() {\r\n        Cards.clear()\r\n        val tamano = manoActual.size - 1\r\n        Cards.add(Card(1, \"inicio\", R.drawable.inicio))\r\n        for(i in 0..tamano) {\r\n            Cards.add(Card(i.toLong(), manoActual[i], traductorCartasToInt(manoActual[i])))\r\n        }\r\n        Cards.add(Card(1, \"fin\", R.drawable.fin))\r\n\r\n        rvCard.layoutManager = LinearLayoutManager(this, LinearLayoutManager.HORIZONTAL, false)\r\n        val adapter = CardAdapter(Cards)\r\n        rvCard.adapter = adapter\r\n    }\r\n\r\n    fun anyadirGamers() {\r\n        Gamers.clear()\r\n        val tamano = jugadoresActuales.size - 1\r\n        for(i in 0..tamano) {\r\n            /*var turno: String = \"\"\r\n            if (i == turn) turno = \"Su turno\"*/\r\n            Gamers.add(Gamer(i.toLong(), R.drawable.jesica, jugadoresActuales[i], /* turno */\"su turno\", numCartasJugadoresActuales[i].toString() + \"  Cartas\"))\r\n        }\r\n        rvGamer.layoutManager = LinearLayoutManager(this, LinearLayoutManager.HORIZONTAL, false)\r\n        val adapter = GamerAdapter(Gamers)\r\n        rvGamer.adapter = adapter\r\n    }\r\n\r\n    fun cambiarElegido() {\r\n        image_record.setImageResource(record)\r\n    }\r\n\r\n    private fun actualizar() {\r\n        CoroutineScope(Dispatchers.IO).launch {\r\n            while(!finished) {\r\n                runOnUiThread {\r\n                    RetrofitClient.instance.readGame(TokenRequest(session))\r\n                        .enqueue(object : Callback<GameInfoResponse> {\r\n                            override fun onFailure(call: Call<GameInfoResponse>, t: Throwable) {\r\n                                Toast.makeText(applicationContext, getString(R.string.no_response), Toast.LENGTH_LONG).show()\r\n                            }\r\n\r\n                            override fun onResponse(\r\n                                call: Call<GameInfoResponse>,\r\n                                response: Response<GameInfoResponse>\r\n                            ) {\r\n                                if (response.code() == 200) {\r\n                                    session = response.body()?.token.toString()\r\n                                    //image_cima.setImageResource(traductorCartasToInt(response.body()!!.topDiscard))\r\n                                    //val prevTurn = turn\r\n                                    turn = response.body()!!.turn\r\n\r\n                                    /*** Players info ***/\r\n                                    miTurno = response.body()!!.turn == 0\r\n\r\n                                    if (miTurno) runOnUiThread { your_turn.text = getString(R.string.your_turn) }\r\n                                    else runOnUiThread { your_turn.text = getString(R.string.not_your_turn) }\r\n\r\n                                    manoNueva = response.body()!!.playerCards\r\n                                    comprobarManoNueva()\r\n                                    if (manoCambiada) {\r\n                                        cambiarMano()\r\n                                        runOnUiThread {\r\n                                            your_cards.text = getString(R.string.your_cards, manoActual.size.toString())\r\n                                            anyadirCartas()\r\n                                        }\r\n                                        manoCambiada = false\r\n                                    }\r\n\r\n                                    if (robadaCarta && cartaAnadida) {\r\n                                        anadirCartaMano(CartaNueva)\r\n                                        runOnUiThread { your_cards.text = getString(R.string.your_cards, manoActual.size.toString())\r\n                                            anyadirCartas()\r\n                                        }\r\n                                        cartaAnadida = false\r\n                                    }\r\n\r\n                                    jugadoresNuevos = response.body()!!.playersIds\r\n                                    numCartasJugadoresNuevos = response.body()!!.playersNumCards\r\n                                    comprobarNombresJugadoresNuevos()\r\n                                    comprobarCartasJugadores()\r\n                                    if (jugadoresCambiados || numCartasJugadoresCambiados) {\r\n                                        cambiarJugadoresYCartas()\r\n                                        runOnUiThread { anyadirGamers() }\r\n                                        jugadoresCambiados = false\r\n                                        numCartasJugadoresCambiados = false\r\n                                    }\r\n\r\n                                    cimaNueva = response.body()!!.topDiscard\r\n                                    comprobarCima()\r\n                                    if (cimaCambiada) {\r\n                                        runOnUiThread { cambiarCima() }\r\n                                        cimaCambiada = false\r\n                                    }\r\n\r\n                                    if (recordCambiado) {\r\n                                        runOnUiThread { cambiarElegido() }\r\n                                        recordCambiado = false\r\n                                    }\r\n\r\n                                    /*if (prevTurn != turn) {  // Cambio de turno\r\n                                        timer.cancel()\r\n                                        timer.start()\r\n                                    }*/\r\n                                } else Toast.makeText(applicationContext, response.code(), Toast.LENGTH_LONG).show()\r\n                            }\r\n                        })\r\n\r\n                }\r\n                delay(500)\r\n            }\r\n        }\r\n    }\r\n\r\n    private val PAUSE_ID = Menu.FIRST\r\n    private val EXIT_ID = Menu.FIRST + 1\r\n\r\n    override fun onCreateOptionsMenu(menu: Menu): Boolean {\r\n        val result = super.onCreateOptionsMenu(menu)\r\n        menu.add(Menu.NONE, PAUSE_ID, Menu.NONE, \"Pausar Partida\")\r\n        menu.add(Menu.NONE, EXIT_ID, Menu.NONE, \"Salir de Partida\")\r\n        return result\r\n    }\r\n\r\n    override fun onOptionsItemSelected(item: MenuItem): Boolean {\r\n        when (item.itemId) {\r\n            PAUSE_ID -> { return true }\r\n            EXIT_ID -> {\r\n                RetrofitClient.instance.quitMatch(TokenRequest(session))\r\n                    .enqueue(object : Callback<TokenResponse> {\r\n                        override fun onFailure(call: Call<TokenResponse>, t: Throwable) {\r\n                            Toast.makeText(applicationContext, getString(R.string.no_response), Toast.LENGTH_LONG).show()\r\n                        } override fun onResponse(call: Call<TokenResponse>, response: Response<TokenResponse>) {\r\n                            if (response.code() == 200) {\r\n                                session = response.body()?.token.toString()\r\n                                Toast.makeText(applicationContext, getString(R.string.quit_game_success), Toast.LENGTH_LONG).show()\r\n                                val intent = Intent().apply { putExtra(\"session\", response.body()!!.token) }\r\n                                setResult(Activity.RESULT_OK, intent)\r\n                                finish()\r\n                            } else {\r\n                                Toast.makeText(applicationContext, getString(R.string.bad_quit_response), Toast.LENGTH_LONG).show()\r\n                            }\r\n                        }\r\n                    })\r\n                return true\r\n            }\r\n        }\r\n        return super.onOptionsItemSelected(item)\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/eina/unizar/unozar/TableroActivity.kt	(revision 2cc819c2bd3f6408528454fc98ee650684b61697)
+++ app/src/main/java/eina/unizar/unozar/TableroActivity.kt	(date 1620858014645)
@@ -325,7 +325,7 @@
         /* Tiempo de turno */
         timer = object: CountDownTimer(initial, interval) {
             override fun onTick(millisUntilFinished: Long) {
-                val timeLeft = millisUntilFinished / 1000
+                //val timeLeft = millisUntilFinished / 1000
                 //timerText.text = getString(R.string.time_left, timeLeft.toString())
             }
             override fun onFinish() {
@@ -360,17 +360,8 @@
             RetrofitClient.instance.draw(TokenRequest(session))
                 .enqueue(object : Callback<TokenResponse> {
                     override fun onFailure(call: Call<TokenResponse>, t: Throwable) {
-                        Toast.makeText(
-                            applicationContext,
-                            getString(R.string.no_response),
-                            Toast.LENGTH_LONG
-                        ).show()
-                    }
-
-                    override fun onResponse(
-                        call: Call<TokenResponse>,
-                        response: Response<TokenResponse>
-                    ) {
+                        Toast.makeText(applicationContext, getString(R.string.no_response), Toast.LENGTH_LONG).show()
+                    } override fun onResponse(call: Call<TokenResponse>, response: Response<TokenResponse>) {
                         if (response.code() == 200) {
                             //CartaNueva = response.body()!!.
                             CartaNueva = "XG2"
@@ -384,6 +375,24 @@
                 })
         }
     }
+
+    // Pedir pausa
+    private fun pausa() {
+        runOnUiThread {
+            RetrofitClient.instance.pause(TokenRequest(session))
+                .enqueue(object : Callback<TokenResponse> {
+                    override fun onFailure(call: Call<TokenResponse>, t: Throwable) {
+                        Toast.makeText(applicationContext, getString(R.string.no_response), Toast.LENGTH_LONG).show()
+                    } override fun onResponse(call: Call<TokenResponse>, response: Response<TokenResponse>) {
+                        if (response.code() == 200) {
+                            session = response.body()?.token.toString()
+                        } else {
+                            Toast.makeText(applicationContext, response.code(), Toast.LENGTH_LONG).show()
+                        }
+                    }
+                })
+        }
+    }
 
     fun anadirCartaMano(nuevaCarta:String) {
         manoActual.add(nuevaCarta)
@@ -474,27 +483,11 @@
         //Mandar carta al servidor
         /** Queda parámetro de posición de la carta en nuestro mazo**/
         runOnUiThread {
-            RetrofitClient.instance.playCard(
-                PlayCardRequest(
-                    session,
-                    posCambiado.toInt(),
-                    haDichoUnozar,
-                    colorSelected
-                )
-            )
+            RetrofitClient.instance.playCard(PlayCardRequest(session, posCambiado.toInt(), haDichoUnozar, colorSelected))
                 .enqueue(object : Callback<TokenResponse> {
                     override fun onFailure(call: Call<TokenResponse>, t: Throwable) {
-                        Toast.makeText(
-                            applicationContext,
-                            "El servidor no responde",
-                            Toast.LENGTH_LONG
-                        ).show()
-                    }
-
-                    override fun onResponse(
-                        call: Call<TokenResponse>,
-                        response: Response<TokenResponse>
-                    ) {
+                        Toast.makeText(applicationContext, getString(R.string.no_response), Toast.LENGTH_LONG).show()
+                    } override fun onResponse(call: Call<TokenResponse>, response: Response<TokenResponse>) {
                         if (response.code() == 200) {
                             //La carta se ha puesto con éxito
                             quitarCarta()
@@ -502,11 +495,7 @@
                             record = 0
                             recordCambiado = true
                         } else {
-                            Toast.makeText(
-                                applicationContext,
-                                "Quizás se haya caido el servidor",
-                                Toast.LENGTH_LONG
-                            ).show()
+                            Toast.makeText(applicationContext, getString(R.string.bad_play_card_response), Toast.LENGTH_LONG).show()
                         }
                     }
                 })
@@ -552,12 +541,7 @@
                         .enqueue(object : Callback<GameInfoResponse> {
                             override fun onFailure(call: Call<GameInfoResponse>, t: Throwable) {
                                 Toast.makeText(applicationContext, getString(R.string.no_response), Toast.LENGTH_LONG).show()
-                            }
-
-                            override fun onResponse(
-                                call: Call<GameInfoResponse>,
-                                response: Response<GameInfoResponse>
-                            ) {
+                            } override fun onResponse(call: Call<GameInfoResponse>, response: Response<GameInfoResponse>) {
                                 if (response.code() == 200) {
                                     session = response.body()?.token.toString()
                                     //image_cima.setImageResource(traductorCartasToInt(response.body()!!.topDiscard))
Index: app/src/main/java/eina/unizar/unozar/Principal.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package eina.unizar.unozar\r\n\r\nimport android.app.Activity\r\nimport android.content.DialogInterface\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.util.Log.d\r\nimport android.view.Menu\r\nimport android.view.MenuItem\r\nimport android.view.View\r\nimport android.widget.Toast\r\nimport androidx.appcompat.app.AlertDialog\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.appcompat.widget.Toolbar\r\nimport kotlinx.android.synthetic.main.activity_principal.*\r\nimport kotlinx.android.synthetic.main.custom_alertdialog.*\r\nimport kotlinx.android.synthetic.main.custom_alertdialog.view.*\r\nimport retrofit2.Call\r\nimport retrofit2.Callback\r\nimport retrofit2.Response\r\nimport server.request.CreateMatchRequest\r\nimport server.request.JoinPrivateRequest\r\nimport server.request.PlayCardRequest\r\nimport server.request.TokenRequest\r\nimport server.response.TokenResponse\r\n\r\n\r\nclass Principal : AppCompatActivity() {\r\n    private var CODE = 73\r\n    private var n = 2\r\n    private lateinit var session: String\r\n    private lateinit var players: AlertDialog.Builder\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_principal)\r\n        val toolbar = findViewById<Toolbar>(R.id.toolbar)\r\n        setSupportActionBar(toolbar)\r\n        session = intent.getStringExtra(\"session\").toString()\r\n        val numPlayers = arrayOf(\"2\", \"3\", \"4\")\r\n        players = AlertDialog.Builder(this)\r\n        players.setTitle(getString(R.string.number_of_players))\r\n        players.setItems(numPlayers) { _: DialogInterface, i: Int ->\r\n            n = numPlayers[i].toInt()\r\n        }\r\n    }\r\n\r\n    override fun onCreateOptionsMenu(menu: Menu): Boolean {\r\n        menuInflater.inflate(R.menu.menu, menu)\r\n        return super.onCreateOptionsMenu(menu)\r\n    }\r\n\r\n    override fun onOptionsItemSelected(item: MenuItem): Boolean {\r\n        when (item.itemId) {\r\n            R.id.action_profile -> {\r\n                val intent = Intent(this, Profile::class.java)\r\n                intent.putExtra(\"session\", session)\r\n                startActivityForResult(intent, CODE)\r\n            }\r\n            R.id.action_logout -> {\r\n                val intent = Intent(this, Login::class.java)\r\n                startActivity(intent)\r\n            }\r\n            R.id.action_friends -> {\r\n                val intent = Intent(this, Friends::class.java)\r\n                intent.putExtra(\"session\", session)\r\n                startActivityForResult(intent, CODE)\r\n            }\r\n            R.id.action_refresh -> {\r\n                RetrofitClient.instance.refreshToken(TokenRequest(session))\r\n                    .enqueue(object : Callback<TokenResponse> {\r\n                        override fun onFailure(call: Call<TokenResponse>, t: Throwable) {\r\n                            Toast.makeText(applicationContext, getString(R.string.no_response), Toast.LENGTH_LONG).show()\r\n                        } override fun onResponse(call: Call<TokenResponse>, response: Response<TokenResponse>) {\r\n                            if (response.code() == 200) {\r\n                                session = response.body()?.token.toString()\r\n                                Toast.makeText(applicationContext, getString(R.string.refresh_success), Toast.LENGTH_LONG).show()\r\n                            } else {\r\n                                Toast.makeText(applicationContext, getString(R.string.bad_refresh_response), Toast.LENGTH_LONG).show()\r\n                            }\r\n                        }\r\n                    })\r\n            }\r\n            R.id.action_delete_game -> {\r\n                RetrofitClient.instance.quitMatch(TokenRequest(session))\r\n                    .enqueue(object : Callback<TokenResponse> {\r\n                        override fun onFailure(call: Call<TokenResponse>, t: Throwable) {\r\n                            Toast.makeText(applicationContext, getString(R.string.no_response), Toast.LENGTH_LONG).show()\r\n                        } override fun onResponse(call: Call<TokenResponse>, response: Response<TokenResponse>) {\r\n                            if (response.code() == 200) {\r\n                                session = response.body()!!.token\r\n                                Toast.makeText(applicationContext, \"Ha salido de la partida\", Toast.LENGTH_LONG).show()\r\n                            } else {\r\n                                Toast.makeText(applicationContext, getString(R.string.bad_quit_response), Toast.LENGTH_LONG).show()\r\n                            }\r\n                        }\r\n                    })\r\n            }\r\n            R.id.action_draw -> {\r\n                RetrofitClient.instance.draw(TokenRequest(session))\r\n                    .enqueue(object : Callback<TokenResponse> {\r\n                        override fun onFailure(call: Call<TokenResponse>, t: Throwable) {\r\n                            Toast.makeText(applicationContext, getString(R.string.no_response), Toast.LENGTH_LONG).show()\r\n                        } override fun onResponse(call: Call<TokenResponse>, response: Response<TokenResponse>) {\r\n                            if (response.code() == 200) {\r\n                                session = response.body()!!.token\r\n                                Toast.makeText(applicationContext, \"Ha robado\", Toast.LENGTH_LONG).show()\r\n                            } else {\r\n                                Toast.makeText(applicationContext, getString(R.string.bad_quit_response), Toast.LENGTH_LONG).show()\r\n                            }\r\n                        }\r\n                    })\r\n            }\r\n        }\r\n        return super.onOptionsItemSelected(item)\r\n    }\r\n\r\n    fun publicMatch(@Suppress(\"UNUSED_PARAMETER\") view: View) {\r\n        val choose = AlertDialog.Builder(this)\r\n        choose.setTitle(getString(R.string.choose))\r\n        choose.setMessage(getString(R.string.public_match_dialog))\r\n        choose.setPositiveButton(getString(R.string.create_button)) { _: DialogInterface, _: Int ->\r\n            players.show()\r\n            /*val intent = Intent(this, CreatePublicMatch::class.java)\r\n            intent.putExtra(\"numPlayers\", n)\r\n            intent.putExtra(\"session\", session)\r\n            startActivityForResult(intent, CODE)*/\r\n        }\r\n        choose.setNegativeButton(getString(R.string.join_button)) { _: DialogInterface, _: Int ->\r\n            players.show()\r\n            /*val intent = Intent(this, JoinMatch::class.java)\r\n            intent.putExtra(\"numPlayers\", n)\r\n            intent.putExtra(\"session\", session)\r\n            startActivityForResult(intent, CODE)*/\r\n        }\r\n        choose.show()\r\n    }\r\n\r\n    fun privateMatch(@Suppress(\"UNUSED_PARAMETER\") view: View) {\r\n        var b: Int\r\n        val choose = AlertDialog.Builder(this)\r\n        choose.setTitle(getString(R.string.choose))\r\n        choose.setMessage(getString(R.string.private_match_dialog))\r\n        choose.setPositiveButton(getString(R.string.create_button)) { _: DialogInterface, _: Int ->\r\n            val numP = AlertDialog.Builder(this)\r\n            val numPlayers = arrayOf(\"2\", \"3\", \"4\")\r\n            numP.setTitle(getString(R.string.number_of_players))\r\n            numP.setItems(numPlayers) { _: DialogInterface, i: Int ->\r\n                n = numPlayers[i].toInt()\r\n                val bots = AlertDialog.Builder(this)\r\n                var numBots:Array<String>\r\n                if (n > 2) {\r\n                    numBots = arrayOf(\"0\", \"1\", \"2\")\r\n                    if (n > 3)\r\n                        numBots = arrayOf(\"0\", \"1\", \"2\", \"3\")\r\n                } else\r\n                    numBots = arrayOf(\"0\", \"1\")\r\n                bots.setTitle(getString(R.string.number_of_bots))\r\n                bots.setItems(numBots) { _: DialogInterface, j: Int ->\r\n                    b = numBots[j].toInt()\r\n                    d(\"Test\", \"numPlayers: $n, numBots: $b\")\r\n                    RetrofitClient.instance.createMatch(CreateMatchRequest(true, n, b, session))\r\n                        .enqueue(object : Callback<TokenResponse> {\r\n                            override fun onFailure(call: Call<TokenResponse>, t: Throwable) {\r\n                                //Toast.makeText(applicationContext, getString(R.string.no_response), Toast.LENGTH_LONG).show()\r\n                                Toast.makeText(applicationContext, t.message, Toast.LENGTH_LONG).show()\r\n                            } override fun onResponse(call: Call<TokenResponse>, response: Response<TokenResponse>) {\r\n                                if (response.code() == 200) {\r\n                                    Toast.makeText(applicationContext, \"Éxito\", Toast.LENGTH_LONG).show()\r\n                                    val intent = Intent(this@Principal, CreatePrivateMatch::class.java)\r\n                                    intent.putExtra(\"numPlayers\", n)\r\n                                    intent.putExtra(\"numBots\", b)\r\n                                    intent.putExtra(\"session\", response.body()?.token)\r\n                                    startActivityForResult(intent, CODE)\r\n                                } else {\r\n                                    //Toast.makeText(applicationContext, getString(R.string.bad_creation_response) + response.code(), Toast.LENGTH_LONG).show()\r\n                                    Toast.makeText(applicationContext, response.code(), Toast.LENGTH_LONG).show()\r\n                                }\r\n                            }\r\n                        })\r\n                }\r\n                bots.setNegativeButton(getString(R.string.cancel)) { _: DialogInterface, _: Int -> }\r\n                bots.show()\r\n            }\r\n            numP.setNegativeButton(getString(R.string.cancel)) { _: DialogInterface, _: Int -> }\r\n            numP.show()\r\n        }\r\n        choose.setNegativeButton(getString(R.string.join_button)) { _: DialogInterface, _: Int ->\r\n            val code = AlertDialog.Builder(this)\r\n            val customLayout: View = layoutInflater.inflate(R.layout.custom_alertdialog, null)\r\n            code.setView(customLayout)\r\n            code.setTitle(getString(R.string.code))\r\n            code.setPositiveButton(getString(R.string.join_button)) { _: DialogInterface, _: Int ->\r\n                RetrofitClient.instance.joinPrivate(JoinPrivateRequest(customLayout.inputCode.text.toString().trim(), session))\r\n                    .enqueue(object : Callback<TokenResponse> {\r\n                        override fun onFailure(call: Call<TokenResponse>, t: Throwable) {\r\n                            //Toast.makeText(applicationContext, getString(R.string.no_response), Toast.LENGTH_LONG).show()\r\n                            Toast.makeText(applicationContext, t.message, Toast.LENGTH_LONG).show()\r\n                        } override fun onResponse(call: Call<TokenResponse>, response: Response<TokenResponse>) {\r\n                            if (response.code() == 200) {\r\n                                Toast.makeText(applicationContext, \"Éxito\", Toast.LENGTH_LONG).show()\r\n                                val intent = Intent(this@Principal, JoinMatch::class.java)\r\n                                intent.putExtra(\"session\", response.body()?.token)\r\n                                startActivityForResult(intent, CODE)\r\n                            } else {\r\n                                //Toast.makeText(applicationContext, getString(R.string.bad_creation_response) + response.code(), Toast.LENGTH_LONG).show()\r\n                                Toast.makeText(applicationContext, response.code(), Toast.LENGTH_LONG).show()\r\n                            }\r\n                        }\r\n                    })\r\n            }\r\n            code.setNegativeButton(getString(R.string.cancel)) { _: DialogInterface, _: Int ->}\r\n            code.show()\r\n        }\r\n        choose.show()\r\n    }\r\n\r\n    override fun onActivityResult (requestCode: Int, resultCode: Int, data: Intent?) {\r\n        if (resultCode == Activity.RESULT_OK && requestCode == CODE) {\r\n            session = data!!.getStringExtra(\"session\").toString()\r\n        } else { super.onActivityResult(requestCode, resultCode, data) }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/eina/unizar/unozar/Principal.kt	(revision 2cc819c2bd3f6408528454fc98ee650684b61697)
+++ app/src/main/java/eina/unizar/unozar/Principal.kt	(date 1620859000945)
@@ -18,10 +18,8 @@
 import retrofit2.Call
 import retrofit2.Callback
 import retrofit2.Response
-import server.request.CreateMatchRequest
-import server.request.JoinPrivateRequest
-import server.request.PlayCardRequest
-import server.request.TokenRequest
+import server.request.*
+import server.response.PlayerInfo
 import server.response.TokenResponse
 
 
@@ -37,6 +35,7 @@
         val toolbar = findViewById<Toolbar>(R.id.toolbar)
         setSupportActionBar(toolbar)
         session = intent.getStringExtra("session").toString()
+        updateInfo()
         val numPlayers = arrayOf("2", "3", "4")
         players = AlertDialog.Builder(this)
         players.setTitle(getString(R.string.number_of_players))
@@ -151,8 +150,7 @@
                 var numBots:Array<String>
                 if (n > 2) {
                     numBots = arrayOf("0", "1", "2")
-                    if (n > 3)
-                        numBots = arrayOf("0", "1", "2", "3")
+                    if (n > 3) numBots = arrayOf("0", "1", "2", "3")
                 } else
                     numBots = arrayOf("0", "1")
                 bots.setTitle(getString(R.string.number_of_bots))
@@ -215,6 +213,21 @@
         choose.show()
     }
 
+    private fun updateInfo() {
+        RetrofitClient.instance.readPlayer(IdRequest(session.substring(0, 32)))
+            .enqueue(object : Callback<PlayerInfo> {
+                override fun onFailure(call: Call<PlayerInfo>, t: Throwable) {
+                    Toast.makeText(applicationContext, getString(R.string.no_response), Toast.LENGTH_LONG).show()
+                } override fun onResponse(call: Call<PlayerInfo>, response: Response<PlayerInfo>) {
+                    if (response.code() == 200) { money.text = response.body()?.money.toString() }
+                    else {
+                        //Toast.makeText(applicationContext, getString(R.string.bad_read_response), Toast.LENGTH_LONG).show()
+                        Toast.makeText(applicationContext, response.code(), Toast.LENGTH_LONG).show()
+                    }
+                }
+            })
+    }
+
     override fun onActivityResult (requestCode: Int, resultCode: Int, data: Intent?) {
         if (resultCode == Activity.RESULT_OK && requestCode == CODE) {
             session = data!!.getStringExtra("session").toString()
Index: app/src/main/java/eina/unizar/unozar/Profile.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package eina.unizar.unozar\r\n\r\nimport android.annotation.SuppressLint\r\nimport android.app.Activity\r\nimport android.content.DialogInterface\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.view.View\r\nimport android.widget.Toast\r\nimport androidx.appcompat.app.AlertDialog\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport kotlinx.android.synthetic.main.activity_profile.*\r\nimport retrofit2.Call\r\nimport retrofit2.Callback\r\nimport retrofit2.Response\r\nimport server.request.IdRequest\r\nimport server.request.TokenRequest\r\nimport server.request.UpdateRequest\r\nimport server.response.PlayerInfo\r\nimport server.response.TokenResponse\r\n\r\nclass Profile : AppCompatActivity() {\r\n\r\n    private var CODE = 73\r\n    private lateinit var session: String\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_profile)\r\n        session = intent.getStringExtra(\"session\").toString()\r\n        updateInfo()\r\n    }\r\n\r\n    private fun updateInfo() {\r\n        RetrofitClient.instance.readPlayer(IdRequest(session.substring(0, 32)))\r\n            .enqueue(object : Callback<PlayerInfo> {\r\n                override fun onFailure(call: Call<PlayerInfo>, t: Throwable) {\r\n                    Toast.makeText(applicationContext, getString(R.string.no_response), Toast.LENGTH_LONG).show()\r\n                }\r\n\r\n                override fun onResponse(call: Call<PlayerInfo>, response: Response<PlayerInfo>) {\r\n                    if (response.code() == 200) {\r\n                        showAlias.text = response.body()?.alias\r\n                        showEmail2.text = response.body()?.email\r\n                        showJugadasTotales.text = response.body()?.publicTotal.toString()\r\n                        showGanadasTotales.text = response.body()?.publicWins.toString()\r\n                        showJugadas.text = response.body()?.privateTotal.toString()\r\n                        showGanadas.text = response.body()?.privateWins.toString()\r\n                    } else {\r\n                        //Toast.makeText(applicationContext, getString(R.string.bad_read_response), Toast.LENGTH_LONG).show()\r\n                        Toast.makeText(applicationContext, response.code(), Toast.LENGTH_LONG).show()\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n    @SuppressLint(\"SetTextI18n\")\r\n    fun goToChangeEmail(@Suppress(\"UNUSED_PARAMETER\") view: View) {\r\n        val intent = Intent(this, EmailChange::class.java)\r\n        intent.putExtra(\"session\", session)\r\n        startActivityForResult(intent, CODE)\r\n    }\r\n\r\n    fun goToChangePassword(@Suppress(\"UNUSED_PARAMETER\") view: View) {\r\n        val intent = Intent(this, PasswordChange::class.java)\r\n        intent.putExtra(\"session\", session)\r\n        startActivityForResult(intent, CODE)\r\n    }\r\n\r\n    fun goToChangeAvatar(@Suppress(\"UNUSED_PARAMETER\") view: View) {\r\n        val intent = Intent(this, ChangeAvatar::class.java)\r\n        intent.putExtra(\"session\", session)\r\n        startActivityForResult(intent, CODE)\r\n    }\r\n\r\n    fun changeAlias() {\r\n        RetrofitClient.instance.updatePlayer(UpdateRequest(null, null, null, session))\r\n            .enqueue(object : Callback<TokenResponse> {\r\n                override fun onFailure(call: Call<TokenResponse>, t: Throwable) {\r\n                    Toast.makeText(applicationContext, getString(R.string.no_response), Toast.LENGTH_LONG).show()\r\n                } override fun onResponse(call: Call<TokenResponse>, response: Response<TokenResponse>) {\r\n                    if (response.code() == 200) {\r\n                        Toast.makeText(applicationContext, getString(R.string.password_change_success), Toast.LENGTH_LONG).show()\r\n                        finish()\r\n                    } else {\r\n                        Toast.makeText(applicationContext, getString(R.string.bad_update_response) + response.code(), Toast.LENGTH_LONG).show()\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n    fun deleteAccount(@Suppress(\"UNUSED_PARAMETER\") view: View) {\r\n        val check = AlertDialog.Builder(this)\r\n        check.setTitle(getString(R.string.alert))\r\n        check.setMessage(getString(R.string.delete_account_alert_message))\r\n        check.setPositiveButton(getString(R.string.alert_possitive_button)) { _: DialogInterface, _: Int ->\r\n            RetrofitClient.instance.deleteAccount(TokenRequest(session))\r\n                .enqueue(object : Callback<Void> {\r\n                    override fun onFailure(call: Call<Void>, t: Throwable) {\r\n                        Toast.makeText(applicationContext, getString(R.string.no_response), Toast.LENGTH_LONG).show()\r\n                    } override fun onResponse(call: Call<Void>, response: Response<Void>) {\r\n                        if (response.code() == 200) {\r\n                            val intent = Intent(this@Profile, Register::class.java)\r\n                            startActivity(intent)\r\n                        } else {\r\n                            Toast.makeText(applicationContext, getString(R.string.bad_delete_response), Toast.LENGTH_LONG).show()\r\n                        }\r\n                    }\r\n                })\r\n        }\r\n        check.setNegativeButton(getString(R.string.alert_negative_button)) { _: DialogInterface, _: Int -> }\r\n        check.show()\r\n    }\r\n\r\n    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\r\n        if (resultCode == Activity.RESULT_OK && requestCode == CODE) {\r\n            session = data!!.getStringExtra(\"session\").toString()\r\n            updateInfo()\r\n        } else { super.onActivityResult(requestCode, resultCode, data) }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/eina/unizar/unozar/Profile.kt	(revision 2cc819c2bd3f6408528454fc98ee650684b61697)
+++ app/src/main/java/eina/unizar/unozar/Profile.kt	(date 1620858661637)
@@ -23,6 +23,12 @@
 
     private var CODE = 73
     private lateinit var session: String
+    private val avatars = arrayListOf(
+        R.drawable.test_user,
+        R.drawable.oso,
+        R.drawable.larry,
+        R.drawable.jesica
+    )
 
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
@@ -46,6 +52,7 @@
                         showGanadasTotales.text = response.body()?.publicWins.toString()
                         showJugadas.text = response.body()?.privateTotal.toString()
                         showGanadas.text = response.body()?.privateWins.toString()
+                        avatar.setImageResource(avatars[response.body()!!.avatarId])
                     } else {
                         //Toast.makeText(applicationContext, getString(R.string.bad_read_response), Toast.LENGTH_LONG).show()
                         Toast.makeText(applicationContext, response.code(), Toast.LENGTH_LONG).show()
Index: app/src/main/res/layout/activity_profile.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<ScrollView xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:orientation=\"vertical\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:layout_marginBottom=\"1dp\"\r\n    tools:conext=\".Profile\">\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:gravity=\"center\"\r\n        android:orientation=\"vertical\">\r\n\r\n        <ImageView\r\n            android:layout_width=\"200dp\"\r\n            android:layout_height=\"200dp\"\r\n            android:gravity=\"center\"\r\n            android:src=\"@drawable/apple_17_2\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/showAlias\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"5dp\"\r\n            android:layout_marginBottom=\"5dp\"\r\n            android:layout_weight=\"1\"\r\n            android:gravity=\"center\"\r\n            android:text=\"Alias\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/imageView\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            app:srcCompat=\"@android:drawable/ic_menu_edit\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/showEmail1\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"5dp\"\r\n            android:layout_marginBottom=\"5dp\"\r\n            android:layout_weight=\"1\"\r\n            android:gravity=\"center\"\r\n            android:text=\"Correo elecronico:\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/showEmail2\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"5dp\"\r\n            android:layout_marginBottom=\"5dp\"\r\n            android:layout_weight=\"1\"\r\n            android:gravity=\"center\"\r\n            android:text=\"manzana@gmail.com\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/buttonCambiarEmail\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"5dp\"\r\n            android:layout_marginBottom=\"5dp\"\r\n            android:layout_weight=\"1\"\r\n            android:gravity=\"center\"\r\n            android:onClick=\"goToChangeEmail\"\r\n            android:text=\"Cambiar correo electrónico\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/buttonCambiarContraseña\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"5dp\"\r\n            android:layout_marginBottom=\"5dp\"\r\n            android:layout_weight=\"1\"\r\n            android:gravity=\"center\"\r\n            android:onClick=\"goToChangePassword\"\r\n            android:text=\"Cambiar contraseña\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/buttonCambiarAvatar\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"5dp\"\r\n            android:layout_marginBottom=\"5dp\"\r\n            android:layout_weight=\"1\"\r\n            android:gravity=\"center\"\r\n            android:onClick=\"goToChangeAvatar\"\r\n            android:text=\"Cambiar avatar\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/show1\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"5dp\"\r\n            android:layout_marginBottom=\"5dp\"\r\n            android:layout_weight=\"1\"\r\n            android:gravity=\"center\"\r\n            android:text=\"Partidas Totales\" />\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:gravity=\"center\"\r\n            android:orientation=\"horizontal\">\r\n\r\n            <TextView\r\n                android:id=\"@+id/show2\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginLeft=\"150dp\"\r\n                android:layout_marginTop=\"5dp\"\r\n                android:layout_marginRight=\"5dp\"\r\n                android:layout_marginBottom=\"5dp\"\r\n                android:layout_weight=\"1\"\r\n                android:text=\"Jugadas: \" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/showJugadasTotales\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginLeft=\"0dp\"\r\n                android:layout_marginTop=\"5dp\"\r\n                android:layout_marginRight=\"150dp\"\r\n                android:layout_marginBottom=\"5dp\"\r\n                android:layout_weight=\"1\"\r\n                android:text=\"50\" />\r\n        </LinearLayout>\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:gravity=\"center\"\r\n            android:orientation=\"horizontal\">\r\n\r\n            <TextView\r\n                android:id=\"@+id/show3\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginLeft=\"150dp\"\r\n                android:layout_marginTop=\"5dp\"\r\n                android:layout_marginRight=\"5dp\"\r\n                android:layout_marginBottom=\"5dp\"\r\n                android:layout_weight=\"1\"\r\n                android:text=\"Ganadas: \" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/showGanadasTotales\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginLeft=\"0dp\"\r\n                android:layout_marginTop=\"5dp\"\r\n                android:layout_marginRight=\"150dp\"\r\n                android:layout_marginBottom=\"5dp\"\r\n                android:layout_weight=\"1\"\r\n                android:text=\"2\" />\r\n        </LinearLayout>\r\n\r\n        <TextView\r\n            android:id=\"@+id/show4\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"5dp\"\r\n            android:layout_marginBottom=\"5dp\"\r\n            android:layout_weight=\"1\"\r\n            android:gravity=\"center\"\r\n            android:text=\"Partidas con amigos \" />\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:gravity=\"center\"\r\n            android:orientation=\"horizontal\">\r\n\r\n            <TextView\r\n                android:id=\"@+id/show5\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginLeft=\"150dp\"\r\n                android:layout_marginTop=\"5dp\"\r\n                android:layout_marginRight=\"5dp\"\r\n                android:layout_marginBottom=\"5dp\"\r\n                android:layout_weight=\"1\"\r\n                android:text=\"Jugadas: \" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/showJugadas\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginLeft=\"0dp\"\r\n                android:layout_marginTop=\"5dp\"\r\n                android:layout_marginRight=\"150dp\"\r\n                android:layout_marginBottom=\"5dp\"\r\n                android:layout_weight=\"1\"\r\n                android:text=\"50\" />\r\n        </LinearLayout>\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:gravity=\"center\"\r\n            android:orientation=\"horizontal\">\r\n\r\n            <TextView\r\n                android:id=\"@+id/show6\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginLeft=\"150dp\"\r\n                android:layout_marginTop=\"5dp\"\r\n                android:layout_marginRight=\"5dp\"\r\n                android:layout_marginBottom=\"5dp\"\r\n                android:layout_weight=\"1\"\r\n                android:text=\"Ganadas: \" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/showGanadas\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginLeft=\"0dp\"\r\n                android:layout_marginTop=\"5dp\"\r\n                android:layout_marginRight=\"150dp\"\r\n                android:layout_marginBottom=\"5dp\"\r\n                android:layout_weight=\"1\"\r\n                android:text=\"2\" />\r\n        </LinearLayout>\r\n\r\n        <Button\r\n            android:id=\"@+id/buttonEliminarCuenta\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"5dp\"\r\n            android:layout_marginBottom=\"5dp\"\r\n            android:layout_weight=\"1\"\r\n            android:gravity=\"center\"\r\n            android:onClick=\"deleteAccount\"\r\n            android:text=\"Eliminar cuenta\" />\r\n\r\n    </LinearLayout>\r\n</ScrollView>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_profile.xml	(revision 2cc819c2bd3f6408528454fc98ee650684b61697)
+++ app/src/main/res/layout/activity_profile.xml	(date 1620858466449)
@@ -15,6 +15,7 @@
         android:orientation="vertical">
 
         <ImageView
+            android:id="@+id/avatar"
             android:layout_width="200dp"
             android:layout_height="200dp"
             android:gravity="center"
Index: app/src/main/res/values-en-rUS/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n    <string name=\"app_name\">UNOZAR</string>\r\n    <string name=\"alias\">Alias</string>\r\n    <string name=\"mail\">Mail</string>\r\n    <string name=\"new_mail\">New mail</string>\r\n    <string name=\"password\">Password</string>\r\n    <string name=\"old_password\">Current Password</string>\r\n    <string name=\"new_password\">New Password</string>\r\n    <string name=\"repeat_password\">Repeat Password</string>\r\n    <string name=\"register\">Sign in</string>\r\n    <string name=\"registered\">Are you already registered? </string>\r\n    <string name=\"login\">Login</string>\r\n    <string name=\"profile\">Perfil</string>\r\n    <string name=\"menu\">Menu</string>\r\n    <string name=\"logout\">Logout</string>\r\n    <string name=\"change\">Change</string>\r\n    <string name=\"cancel\">Cancel</string>\r\n    <string name=\"add_friend\">Add friend</string>\r\n    <string name=\"create\">Create match</string>\r\n    <string name=\"public_game\">Public match</string>\r\n    <string name=\"private_game\">Private match</string>\r\n    <string name=\"choose_friend\">Choose Friend</string>\r\n    <string name=\"friends\">Friends</string>\r\n    <string name=\"exit\">Exit</string>\r\n    <string name=\"chosen_card\">Chosen</string>\r\n    <string name=\"your_turn\">Your turn</string>\r\n    <string name=\"not_your_turn\">It\\'s not your turn</string>\r\n    <string name=\"your_cards\">%1$s Cards</string>\r\n    <string name=\"play_card\">Play card</string>\r\n    <string name=\"time_left\">Time left: %1$s</string>\r\n    <!-- DIALOG TEXT -->\r\n    <string name=\"alert\">Careful! </string>\r\n    <string name=\"choose\">Choose</string>\r\n    <string name=\"code\">Write here the code of the match</string>\r\n    <string name=\"add_friend_message\">Do you want to add him/her as your friend? </string>\r\n    <string name=\"add_to_game\">¿Do you want to invite %1$s to your game?</string>\r\n    <string name=\"delete_friend_message\">Do you want to delete this player from your friends list? </string>\r\n    <string name=\"delete_account_alert_message\">You are permanently deleting your account, do you want to continue? </string>\r\n    <string name=\"email_update_alert_message\">You are going to change the email associated with your account, do you want to continue? </string>\r\n    <string name=\"password_update_alert_message\">You are going to change your account password, do you want to continue? </string>\r\n    <string name=\"public_match_dialog\">Do you want to create a new public game or join one already created? </string>\r\n    <string name=\"private_match_dialog\">Do you want to create a new private game or join one already created? </string>\r\n    <string name=\"number_of_players\">Number of players </string>\r\n    <string name=\"number_of_bots\">Number of bots </string>\r\n    <!-- DIALOG BUTTONS -->\r\n    <string name=\"alert_possitive_button\">Yes</string>\r\n    <string name=\"alert_negative_button\">Not</string>\r\n    <string name=\"add_button\">Add</string>\r\n    <string name=\"create_button\">Create</string>\r\n    <string name=\"join_button\">Join</string>\r\n    <string name=\"delete_button\">Delete</string>\r\n    <!-- INPUT ERRORS -->\r\n    <string name=\"email_format_error\">Write a valid email </string>\r\n    <string name=\"alias_format_error\">Please write a valid alias</string>\r\n    <string name=\"password_format_error\">Please enter a valid password </string>\r\n    <string name=\"different_passwords\">Passwords do not match </string>\r\n    <!-- SERVER CALL ERRORS -->\r\n    <string name=\"no_response\">The server does not respond</string>\r\n    <string name=\"bad_register_response\">The server might be down</string>\r\n    <string name=\"bad_delete_response\">Error! Could not delete your account</string>\r\n    <string name=\"bad_update_response\">Error! The change could not be made </string>\r\n    <string name=\"bad_login_response\">Error! Check the data entered </string>\r\n    <string name=\"bad_refresh_response\">Session could not be updated </string>\r\n    <string name=\"bad_creation_response\">Game could not be created </string>\r\n    <string name=\"bad_quit_response\">It´s not possible to quit the game</string>\r\n    <string name=\"bad_read_response\">Couldn\\'t read your account info</string>\r\n    <!-- SERVER CALL SUCCESS -->\r\n    <string name=\"email_change_success\">You have successfully updated your email address </string>\r\n    <string name=\"password_change_success\">You have updated your password successfully </string>\r\n    <string name=\"avatar_change_success\">Your avatar was updated successfully</string>\r\n    <string name=\"refresh_success\">Updated session </string>\r\n    <string name=\"quit_game_success\">You left the game</string>\r\n    <!-- INVITE EMAIL -->\r\n    <string name=\"email_message\">Write this code to join a game: %1$s</string>\r\n    <string name=\"cash\">5500</string>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values-en-rUS/strings.xml	(revision 2cc819c2bd3f6408528454fc98ee650684b61697)
+++ app/src/main/res/values-en-rUS/strings.xml	(date 1620857366451)
@@ -65,6 +65,7 @@
     <string name="bad_creation_response">Game could not be created </string>
     <string name="bad_quit_response">It´s not possible to quit the game</string>
     <string name="bad_read_response">Couldn\'t read your account info</string>
+    <string name="bad_play_card_response">Error while playing that card, try again</string>
     <!-- SERVER CALL SUCCESS -->
     <string name="email_change_success">You have successfully updated your email address </string>
     <string name="password_change_success">You have updated your password successfully </string>
Index: app/src/main/java/server/response/PlayerInfo.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package server.response\r\n\r\nimport com.google.gson.annotations.SerializedName\r\n\r\ndata class PlayerInfo(@SerializedName(\"id\")val id:String,\r\n                      @SerializedName(\"email\")val email:String,\r\n                      @SerializedName(\"alias\")val alias:String,\r\n                      @SerializedName(\"gameId\")val gameId:String,\r\n                      @SerializedName(\"privateWins\")val privateWins:Int,\r\n                      @SerializedName(\"privateTotal\")val privateTotal:Int,\r\n                      @SerializedName(\"publicWins\")val publicWins:Int,\r\n                      @SerializedName(\"publicTotal\")val publicTotal:Int,\r\n                      @SerializedName(\"token\")val token: String)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/server/response/PlayerInfo.kt	(revision 2cc819c2bd3f6408528454fc98ee650684b61697)
+++ app/src/main/java/server/response/PlayerInfo.kt	(date 1620858593283)
@@ -4,10 +4,13 @@
 
 data class PlayerInfo(@SerializedName("id")val id:String,
                       @SerializedName("email")val email:String,
+                      @SerializedName("avatarId")val avatarId:Int,
                       @SerializedName("alias")val alias:String,
+                      @SerializedName("money")val money:Int,
+                      @SerializedName("unlockable")val unlockable:Array<String>,
+                      @SerializedName("giftClaimedToday")val giftClaimedToday:Boolean,
                       @SerializedName("gameId")val gameId:String,
                       @SerializedName("privateWins")val privateWins:Int,
                       @SerializedName("privateTotal")val privateTotal:Int,
                       @SerializedName("publicWins")val publicWins:Int,
-                      @SerializedName("publicTotal")val publicTotal:Int,
-                      @SerializedName("token")val token: String)
+                      @SerializedName("publicTotal")val publicTotal:Int)
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\r\n    <string name=\"app_name\">UNOZAR</string>\r\n    <string name=\"alias\">Alias</string>\r\n    <string name=\"mail\">Correo electrónico</string>\r\n    <string name=\"new_mail\">Nuevo correo electrónico</string>\r\n    <string name=\"password\">Contraseña</string>\r\n    <string name=\"old_password\">Contraseña actual</string>\r\n    <string name=\"new_password\">Nueva contraseña</string>\r\n    <string name=\"repeat_password\">Repetir contraseña</string>\r\n    <string name=\"register\">Registrarse</string>\r\n    <string name=\"registered\">¿Ya está registrado?</string>\r\n    <string name=\"login\">Iniciar Sesión</string>\r\n    <string name=\"profile\">Perfil</string>\r\n    <string name=\"menu\">Menu</string>\r\n    <string name=\"logout\">Cerrar sesión</string>\r\n    <string name=\"change\">Cambiar</string>\r\n    <string name=\"cancel\">Cancelar</string>\r\n    <string name=\"add_friend\">Añadir amigo</string>\r\n    <string name=\"create\">Crear partida</string>\r\n    <string name=\"public_game\">Partida pública</string>\r\n    <string name=\"private_game\">Partida privada</string>\r\n    <string name=\"choose_friend\">Escoja un amigo</string>\r\n    <string name=\"friends\">Amigos</string>\r\n    <string name=\"exit\">Salir</string>\r\n    <string name=\"chosen_card\">Elegida</string>\r\n    <string name=\"your_turn\">Tu turno</string>\r\n    <string name=\"your_cards\">%1$s Cartas</string>\r\n    <string name=\"not_your_turn\">No es tu turno</string>\r\n    <string name=\"play_card\">Poner carta</string>\r\n    <string name=\"time_left\">Tiempo restante: %1$s</string>\r\n    <!-- DIALOG TEXT -->\r\n    <string name=\"alert\">¡Cuidado!</string>\r\n    <string name=\"choose\">Elija</string>\r\n    <string name=\"code\">Escriba aquí el código de la partida</string>\r\n    <string name=\"add_friend_message\">Escriba aquí el email de su amigo</string>\r\n    <string name=\"add_to_game\">¿Quiere invitar a %1$s a la partida?</string>\r\n    <string name=\"delete_friend_message\">¿Quiere eliminar a este jugador de su lista de amigos? </string>\r\n    <string name=\"delete_account_alert_message\">Va a eliminar su cuenta de forma permanente, ¿desea continuar?</string>\r\n    <string name=\"email_update_alert_message\">Va a cambiar el correo electrónico asociado a su cuenta, ¿desea continuar?</string>\r\n    <string name=\"password_update_alert_message\">Va a cambiar la contraseña de su cuenta, ¿desea continuar?</string>\r\n    <string name=\"public_match_dialog\">¿Quiere crear una nueva partida pública o unirse a una ya creada?</string>\r\n    <string name=\"private_match_dialog\">¿Quiere crear una nueva partida privada o unirse a una ya creada?</string>\r\n    <string name=\"number_of_players\">Número de jugadores</string>\r\n    <string name=\"number_of_bots\">Número de bots</string>\r\n    <!-- DIALOG BUTTONS -->\r\n    <string name=\"alert_possitive_button\">Sí</string>\r\n    <string name=\"alert_negative_button\">No</string>\r\n    <string name=\"add_button\">Añadir</string>\r\n    <string name=\"create_button\">Crear</string>\r\n    <string name=\"join_button\">Unirme</string>\r\n    <string name=\"delete_button\">Borrar</string>\r\n    <!-- INPUT ERRORS -->\r\n    <string name=\"alias_format_error\">Escriba un alias válido</string>\r\n    <string name=\"email_format_error\">Escriba un email válido</string>\r\n    <string name=\"password_format_error\">Escriba una contraseña válida</string>\r\n    <string name=\"different_passwords\">Las contraseñas no coinciden</string>\r\n    <!-- SERVER CALL ERRORS -->\r\n    <string name=\"no_response\">El servidor no responde</string>\r\n    <string name=\"bad_register_response\">Quizás se haya caido el servidor</string>\r\n    <string name=\"bad_delete_response\">Error! No se pudo eliminar su cuenta</string>\r\n    <string name=\"bad_update_response\">Error! No se pudo realizar el cambio</string>\r\n    <string name=\"bad_login_response\">Error! Revise los datos introducidos</string>\r\n    <string name=\"bad_refresh_response\">No se pudo actualizar la sesión</string>\r\n    <string name=\"bad_creation_response\">No se pudo crear la partida</string>\r\n    <string name=\"bad_quit_response\">No es posible salir de la partida</string>\r\n    <string name=\"bad_read_response\">No se han podido cargar los datos de su cuenta</string>\r\n    <!-- SERVER CALL SUCCESS -->\r\n    <string name=\"email_change_success\">Ha actualizado su dirección de correo electrónico con éxito</string>\r\n    <string name=\"password_change_success\">Ha actualizado su contraseña con éxito</string>\r\n    <string name=\"avatar_change_success\">Ha actualizado su avatar con éxito</string>\r\n    <string name=\"refresh_success\">Sesión actualizada</string>\r\n    <string name=\"quit_game_success\">Ha salido de la partida</string>\r\n    <!-- INVITE EMAIL -->\r\n    <string name=\"email_message\">Escribe este código en la app para unirte a una partida: %1$s</string>\r\n    <string name=\"cash\">5500</string>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/strings.xml	(revision 2cc819c2bd3f6408528454fc98ee650684b61697)
+++ app/src/main/res/values/strings.xml	(date 1620857316908)
@@ -63,7 +63,8 @@
     <string name="bad_refresh_response">No se pudo actualizar la sesión</string>
     <string name="bad_creation_response">No se pudo crear la partida</string>
     <string name="bad_quit_response">No es posible salir de la partida</string>
-    <string name="bad_read_response">No se han podido cargar los datos de su cuenta</string>
+    <string name="bad_read_response">No se han podido cargar los datos de su cuenta</string>bad_play_card_response
+    <string name="bad_play_card_response">Error al jugar la carta, inténtelo de nuevo</string>
     <!-- SERVER CALL SUCCESS -->
     <string name="email_change_success">Ha actualizado su dirección de correo electrónico con éxito</string>
     <string name="password_change_success">Ha actualizado su contraseña con éxito</string>
